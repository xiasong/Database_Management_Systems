{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;}
\margl1440\margr1440\vieww25100\viewh15700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs72 \cf0 Sales Cube
\fs36 \
\

\b Query 1:
\b0\fs48  
\fs36 \

\fs28 CREATE VIEW q1 AS\
\
EXPLAIN SELECT   c.customer_id, \
	  coalesce (sum (s.quantity), 0) AS quantity_sold, \
	  coalesce (sum (s.quantity*s.price), 0.0) AS dollar_value\
FROM     customer c LEFT  JOIN sale s ON c.customer_id = s.customer_id\
GROUP BY c.customer_id;
\fs36 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
Total query runtime: 701.\
5000 rows retrieved.
\f0\fs28 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs36 \cf0 \
For this query, it is simply looking up the total sales per customer. An index is already in place (customer_id), therefore, we do not need to insert index in this query.\
\
\
\

\b Query 2: 
\b0 \

\fs28 CREATE VIEW q2 AS\
SELECT   s.state_name, \
	 coalesce (SUM (q.quantity_sold), 0) AS quantity_sold, \
	 coalesce (SUM (q.dollar_value), 0.0) AS dollar_value\
\
FROM     (state s LEFT  JOIN customer c ON s.state_id = c.state_id)\
	 LEFT  JOIN q1 q ON c.customer_id = q.customer_id\
\
GROUP BY s.state_id;
\fs36 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
Total query runtime: 130 msec.\
50 rows retrieved.
\f0 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
For this query, it is similar with the query 1. In this query, queries or joins are performed on primary keys which already have an index.\
\
\
\

\b Query 3:
\b0 \
\

\fs28 PREPARE Q3 (int) AS\
\
SELECT    product_id, \
	  SUM (quantity) AS quantity_sold, \
	  SUM (quantity*price) AS dollar_value\
\
FROM      sale\
\
WHERE     customer_id = $1\
\
GROUP BY  product_id\
ORDER BY  dollar_value DESC;\
\
--for customer of id 13, invoke this as\
--EXECUTE Q3(13);
\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \
\pard\pardeftab720\sl360\partightenfactor0

\fs36 \cf2 Total query runtime: 198 (145) msec.\
1000 rows retrieved.
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-23 at 11.52.05 AM.png \width12400 \height3880
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\b\fs36 \cf2 Analysis\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b0 \cf2 From the query plan, we can see that it is expensive (944) sequential scan on the custom_id column, we should be able to speed this up with an index.\
\
create index customer_id_index on sale(customer_id)\
\
run it again with the new index
\fs26 \
\

\fs36 Total query runtime: 123 msec.\
1000 rows retrieved.
\fs26 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-23 at 11.54.09 AM.png \width13140 \height3840
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 \kerning1\expnd0\expndtw0 \
\
Query 4:
\b0 \
\

\fs28 CREATE VIEW q4 AS\
\
SELECT	  c.customer_id, c.customer_name, p.product_id, \
	  coalesce (SUM (s.quantity), 0) AS quantity_sold, \
	  coalesce (SUM (s.quantity*s.price), 0.0) AS dollar_value,\
	  -- needed later:\
	  c.state_id, p.category_id\
\
FROM      (customer c CROSS JOIN product p) LEFT  JOIN sale s \
	  ON c.customer_id = s.customer_id AND p.product_id = s.product_id\
\
GROUP BY  c.customer_id, p.product_id\
ORDER BY  c.customer_id, dollar_value DESC;\
\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs36 \cf2 \expnd0\expndtw0\kerning0
Total query runtime: 33 min.\
25000000 rows retrieved.
\fs26 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2017-02-23 at 4.45.51 PM.png \width14220 \height8360
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\b\fs36 \cf2 \expnd0\expndtw0\kerning0
Analysis\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b0 \cf2 From the query plan, we can see that a full sequential scan on sale table, which may have a high cost. However, this query does not involve any columns or join operation on non-index columns. Therefore, we do not need to set up index to help optimization.
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 \kerning1\expnd0\expndtw0 Query 5:
\b0 \
\

\fs28 CREATE VIEW q5 AS\
--reusing Q4\
\
SELECT    s.state_id, c.category_id, \
	  coalesce (SUM (q.quantity_sold), 0) AS quantity_sold,\
	  coalesce (SUM (q.dollar_value), 0.0) AS dollar_value\
\
FROM      (state s CROSS JOIN category c)\
	  LEFT  JOIN q4 q ON s.state_id = q.state_id AND c.category_id = q.category_id\
\
GROUP BY  s.state_id, c.category_id;
\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl360\partightenfactor0

\fs36 \cf2 Total query runtime: 6 min.\
50000 rows retrieved.
\fs26 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2017-02-23 at 12.57.01 PM.png \width15040 \height15340
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\b\fs36 \cf2 Analysis
\f1\b0\fs26 \
\pard\pardeftab720\sl360\partightenfactor0

\f3\fs32 \cf2 As you can see from the query plan we have cross join and left join, however we can't optimize it with indices because they are already using primary keys. Also, we can see that the outermost group aggregate is expensive, but we can't help that by adding an index.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 \kerning1\expnd0\expndtw0 Query 6:
\b0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs26 \cf0 CREATE VIEW top_customer (customer_id) AS\
--reusing Q1:\
SELECT    customer_id\
FROM	  q1\
ORDER BY  dollar_value DESC\
LIMIT 	  20;\
\
\
CREATE VIEW top_category (category_id) AS\
--reusing Q5:\
SELECT    category_id, SUM (dollar_value) AS dollar_value\
FROM	  q5\
GROUP BY  category_id\
ORDER BY  dollar_value DESC\
LIMIT 	  20;\
\
\
CREATE VIEW q6 AS\
--reusing Q4:\
SELECT	  ca.category_id, cu.customer_id, \
	  coalesce (SUM (q.quantity_sold), 0) AS quantity_sold,\
	  coalesce (SUM (q.dollar_value), 0.0) AS dollar_value\
\
FROM      (top_customer cu CROSS JOIN top_category ca) LEFT JOIN q4 q \
	  ON q.customer_id = cu.customer_id AND q.category_id = ca.category_id\
\
GROUP BY  ca.category_id, cu.customer_id;
\fs28 \
	  
\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl360\partightenfactor0

\fs36 \cf2 Total query runtime: 7 min.\
400 rows retrieved.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2017-02-23 at 5.12.26 PM.png \width16220 \height10280
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-23 at 5.13.32 PM.png \width16240 \height9520
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-23 at 5.14.27 PM.png \width16240 \height9460
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-23 at 5.15.10 PM.png \width16240 \height9000
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f3\fs32 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\b\fs36 \cf2 Analysis
\f1\b0\fs26 \
\pard\pardeftab720\sl360\partightenfactor0

\f3\fs32 \cf2 As you can see from the query plan we have cross join and left join, therefore we create two index to optimize our query.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \kerning1\expnd0\expndtw0 \
CREATE INDEX product_category_id_idx \
ON sales.product USING tree\
(category_id);\
\
 CREATE INDEX sale_product_id_idx \
ON sales.sale USING tree\
(product_id);\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl360\partightenfactor0

\fs36 \cf2 Total query runtime: 5 min.\
400 rows retrieved.
\f3\fs32 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs26 \cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2017-02-25 at 9.29.29 AM.png \width13620 \height10880
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-25 at 9.30.20 AM.png \width13600 \height9520
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-25 at 9.31.05 AM.png \width13600 \height9560
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2017-02-25 at 9.31.42 AM.png \width13640 \height8000
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\
\
}